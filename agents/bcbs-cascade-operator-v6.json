{
  "name": "BCBS Cascade Operator",
  "description": "Advanced orchestration agent for multi-agent workflows in the BCBS_Values system with enhanced MPC protocol v6.0",
  "version": "6.0.0",
  
  "_comment_trigger": "Phrase or command that activates this orchestration agent",
  "trigger": "cascade-operator",
  
  "_comment_versioning": "Version control information and compatibility requirements",
  "versioning": {
    "schema_version": "6.0.0",
    "compatibility": {
      "min_api_version": "3.0.0",
      "max_api_version": "6.x.x"
    },
    "change_history": [
      {
        "version": "1.0.0",
        "date": "2025-03-29",
        "changes": "Initial implementation"
      },
      {
        "version": "2.0.0",
        "date": "2025-03-30",
        "changes": "Enhanced inter-agent communication protocol, added calibration data and error reporting"
      },
      {
        "version": "3.0.0",
        "date": "2025-03-30",
        "changes": "Comprehensive update with enhanced MPC protocol, expanded error handling, and unified workflow orchestration"
      },
      {
        "version": "4.0.0",
        "date": "2025-03-30",
        "changes": "Major protocol overhaul with advanced calibration, secure parameter exchange, and standardized error handling framework"
      },
      {
        "version": "5.0.0",
        "date": "2025-03-30",
        "changes": "Enhanced protocol with improved versioning, enhanced calibration data, detailed error logs, precise timestamp handling, and expanded workflow orchestration capabilities"
      },
      {
        "version": "6.0.0",
        "date": "2025-03-31",
        "changes": "Comprehensive protocol upgrade with enhanced workflow templates, expanded message examples, advanced error handling, and BCBS compliance extensions"
      }
    ],
    "version_control": {
      "repository": "bcbs-values-agents",
      "branch": "main",
      "commit_hash": "b3d5f7g9i1k3m5o7q9s1u3w5y7",
      "commit_date": "2025-03-31T10:15:00Z",
      "author": "BCBS Cascade Operator",
      "ci_build_number": "CI-20250331-072",
      "artifact_location": "registry.bcbs-values.local/agents/cascade-operator:6.0.0"
    }
  },
  
  "_comment_orchestration": "Core capabilities for multi-agent orchestration",
  "orchestration_capabilities": {
    "execution_modes": ["sequential", "parallel", "conditional", "event-driven", "adaptive", "federated", "hybrid", "self-optimizing"],
    "agent_coordination": true,
    "state_persistence": true,
    "workflow_visualization": true,
    "protocol_enforcement": true,
    "exception_handling": "structured",
    "multi_agent_capabilities": {
      "coordination_patterns": ["centralized", "decentralized", "hierarchical", "mesh", "layered", "star", "ring", "dynamic-topology"],
      "consensus_algorithms": ["majority-vote", "weighted-vote", "threshold-based", "ensemble-consensus", "reputation-based", "progressive-validation", "byzantine-fault-tolerant"],
      "conflict_resolution": "priority-based",
      "resource_allocation": "dynamic",
      "distributed_transaction_support": true,
      "synchronization_mechanisms": ["barrier-based", "token-ring", "two-phase-commit", "vector-clock", "consensus-based-barrier"]
    },
    "workflow_optimization": {
      "auto_scaling": true,
      "task_prioritization": true,
      "load_balancing": "adaptive",
      "performance_monitoring": true,
      "bottleneck_detection": true,
      "resource_optimization": {
        "memory_management": "adaptive",
        "processing_power_allocation": "priority-based",
        "network_bandwidth_optimization": true,
        "dynamic_resource_allocation": true,
        "predictive_scaling": true,
        "utilization_thresholds": {
          "cpu": {
            "normal": "< 70%",
            "warning": "70% - 85%",
            "critical": "> 85%"
          },
          "memory": {
            "normal": "< 75%",
            "warning": "75% - 90%",
            "critical": "> 90%"
          },
          "disk_io": {
            "normal": "< 65%",
            "warning": "65% - 80%",
            "critical": "> 80%"
          },
          "network": {
            "normal": "< 60%",
            "warning": "60% - 75%",
            "critical": "> 75%"
          }
        }
      }
    },
    "real_time_feedback": {
      "progress_reporting": true,
      "health_monitoring": true,
      "bottleneck_detection": true,
      "alert_thresholds": {
        "task_duration": "> 120s",
        "error_rate": "> 5%",
        "resource_utilization": "> 85%",
        "model_drift": "> 10%",
        "calibration_deviation": "> 7.5%",
        "response_time": "> 2s",
        "message_processing_delay": "> 500ms",
        "queue_depth": "> 100 messages",
        "validation_failure_rate": "> 3%",
        "data_quality_score": "< 0.92"
      }
    }
  },
  
  "_comment_registry": "Registry of all available agents that can be coordinated by this operator",
  "agent_registry": {
    "agent_types": [
      {
        "type": "bootstrap",
        "name": "Bootstrap Commander",
        "config_path": "agents/bcbs-bootstrap-commander.json",
        "capabilities": ["environment-setup", "dependency-validation", "test-execution", "workflow-initialization", "system-monitoring"],
        "communication_channels": ["direct-command", "status-update", "model-parameter-exchange", "protocol-calibration", "environment-feedback"],
        "protocol_version": "6.0.0",
        "role": "infrastructure",
        "priority": "high",
        "startup_sequence": 1,
        "security_clearance": "admin",
        "resource_requirements": {
          "memory": "medium",
          "cpu": "low",
          "disk": "low",
          "network": "medium"
        },
        "health_check_endpoint": "/api/agents/bootstrap/health",
        "failover_strategy": "restart-with-checkpoint",
        "scale_factor": 1,
        "max_instances": 1,
        "recovery_time_objective": "30s"
      },
      {
        "type": "etl",
        "name": "ETL Processor",
        "config_path": "agents/bootstrap-commander.json",
        "capabilities": ["data-extraction", "data-transformation", "data-loading", "data-validation", "source-integration", "incremental-processing"],
        "communication_channels": ["data-pipeline", "validation-results", "status-update", "model-parameter-exchange", "data-quality-metrics", "schema-registry"],
        "protocol_version": "6.0.0",
        "role": "data-processing",
        "priority": "normal",
        "startup_sequence": 2,
        "security_clearance": "data-admin",
        "resource_requirements": {
          "memory": "high",
          "cpu": "medium",
          "disk": "high",
          "network": "high"
        },
        "data_sources": ["mls", "narrpr", "pacs", "gis", "tax-assessor", "census-data"],
        "data_quality_metrics": ["completeness", "consistency", "accuracy", "timeliness", "uniqueness", "validity"],
        "health_check_endpoint": "/api/agents/etl/health",
        "failover_strategy": "resume-from-checkpoint",
        "scale_factor": 1.5,
        "max_instances": 3,
        "recovery_time_objective": "2m"
      },
      {
        "type": "valuation",
        "name": "God-Tier Builder",
        "config_path": "agents/god-tier-builder.json",
        "capabilities": ["valuation-modeling", "feature-engineering", "prediction-generation", "parameter-optimization", "model-calibration", "uncertainty-quantification"],
        "communication_channels": ["model-updates", "prediction-results", "status-update", "model-parameter-exchange", "calibration-data", "performance-metrics", "model-registry"],
        "protocol_version": "6.0.0",
        "role": "model-builder",
        "priority": "high",
        "startup_sequence": 3,
        "security_clearance": "model-admin",
        "resource_requirements": {
          "memory": "high",
          "cpu": "high",
          "disk": "medium",
          "gpu": "preferred",
          "network": "medium"
        },
        "model_types": ["linear", "ensemble", "lightgbm", "spatial", "hybrid-ensemble", "neural", "bayesian"],
        "feature_engineering_capabilities": ["polynomial", "spatial", "interaction", "selection", "auto-feature-discovery", "temporal"],
        "health_check_endpoint": "/api/agents/valuation/health",
        "failover_strategy": "hot-standby-switch",
        "scale_factor": 2.0,
        "max_instances": 5,
        "recovery_time_objective": "1m"
      },
      {
        "type": "validation",
        "name": "TDD Validator",
        "config_path": "agents/tdd-validator.json",
        "capabilities": ["validation-logic", "test-execution", "quality-assurance", "model-validation", "drift-detection", "adversarial-testing"],
        "communication_channels": ["validation-results", "test-reports", "status-update", "model-parameter-exchange", "error-reporting", "calibration-feedback", "performance-metrics"],
        "protocol_version": "6.0.0",
        "role": "quality-assurance",
        "priority": "high",
        "startup_sequence": 4,
        "security_clearance": "validation-admin",
        "resource_requirements": {
          "memory": "medium",
          "cpu": "medium",
          "disk": "medium",
          "network": "low"
        },
        "validation_strategies": ["cross-validation", "holdout", "backtesting", "sensitivity", "monte-carlo", "adversarial", "counterfactual"],
        "metrics": ["r2", "adj_r2", "rmse", "mae", "mape", "calibration_error", "feature_importance_stability", "prediction_interval_coverage"],
        "health_check_endpoint": "/api/agents/validation/health",
        "failover_strategy": "checkpoint-recovery",
        "scale_factor": 1.0,
        "max_instances": 2,
        "recovery_time_objective": "1m30s"
      }
    ],
    "agent_relationships": {
      "hierarchical": [
        {
          "parent": "bootstrap",
          "children": ["etl", "valuation", "validation"],
          "relationship_type": "deployment-control",
          "delegation_rules": {
            "task_delegation": "priority-based",
            "escalation_path": "bootstrap",
            "monitoring_responsibility": "parent-to-child"
          }
        }
      ],
      "peer_to_peer": [
        {
          "agents": ["etl", "valuation"],
          "relationship_type": "data-model-pipeline",
          "communication_pattern": "sequential",
          "data_contract": {
            "schema_validation": true,
            "quality_thresholds": {
              "completeness": 0.95,
              "consistency": 0.98
            }
          }
        },
        {
          "agents": ["valuation", "validation"],
          "relationship_type": "model-validation-feedback",
          "communication_pattern": "bidirectional",
          "feedback_loop": {
            "validation_frequency": "every-model-update",
            "performance_threshold": {
              "r2_minimum": 0.85,
              "mae_maximum": 0.09
            }
          }
        }
      ],
      "conflict_resolution": {
        "mechanism": "priority-based",
        "arbitrator": "bootstrap",
        "resolution_strategies": {
          "parameter_conflicts": "newest-wins-with-validation",
          "resource_conflicts": "priority-based-allocation",
          "quality_threshold_conflicts": "stricter-wins"
        }
      }
    }
  },
  
  "_comment_communication": "Protocol for standardized agent communication",
  "inter_agent_communication_protocol": {
    "name": "BCBS-MPC-Protocol",
    "version": "6.0.0",
    "description": "Enhanced Multi-Protocol Calibration (MPC) system for standardized agent communication with advanced security, versioning, and precise timestamp handling",
    "message_schema": {
      "header": {
        "message_id": "string (UUID)",
        "timestamp": "ISO-8601 datetime with microsecond precision",
        "sender_id": "string (agent identifier)",
        "receiver_id": "string or array (target agent(s))",
        "message_type": "enum (command, event, data, status, parameter, calibration, error, heartbeat)",
        "priority": "enum (critical, high, normal, low)",
        "correlation_id": "string (UUID for related messages)",
        "reply_to": "string (channel for responses)",
        "expires_at": "ISO-8601 datetime or null",
        "sequence_num": "integer (for message ordering)",
        "protocol_version": "string (semantic version of protocol in use)",
        "causation_id": "string (UUID of the message that caused this one)",
        "flow_id": "string (identifier for the business process flow)",
        "retry_count": "integer (number of retry attempts)",
        "ttl": "integer (time-to-live in seconds)"
      },
      "body": {
        "content_type": "string (json, binary, text, protobuf)",
        "content": "object (actual message payload)",
        "schema_version": "string (semantic version)",
        "is_encrypted": "boolean",
        "compression": "enum (none, gzip, zstd, lz4)",
        "digital_signature": "string (hash for verification)",
        "checksum": "string (data integrity verification)",
        "encoding": "string (utf-8, base64, etc.)",
        "size": "integer (size in bytes)",
        "chunk_info": {
          "is_chunked": "boolean",
          "chunk_size": "integer",
          "chunk_index": "integer",
          "total_chunks": "integer"
        }
      },
      "metadata": {
        "task_id": "string (UUID of related task)",
        "workflow_id": "string (UUID of workflow)",
        "tags": "array of strings",
        "context": "object (additional context data)",
        "security_level": "enum (public, restricted, confidential, secret)",
        "trace_id": "string (for distributed tracing)",
        "span_id": "string (for trace segmentation)",
        "execution_environment": "string (development, testing, production)",
        "source_location": "string (code location where message originated)",
        "sensitivity": "enum (public, internal, confidential, restricted)",
        "geo_location": "object (latitude, longitude)",
        "retention_policy": "string (how long to keep this message)"
      }
    },
    "parameter_exchange": {
      "model_parameters": {
        "format": "named_parameter_set",
        "schema_validation": true,
        "versioning": true,
        "diff_based_updates": true,
        "parameter_types": ["numeric", "categorical", "vector", "matrix", "hyperparameter", "feature_metadata", "tensor", "graph", "probability_distribution"],
        "supported_serializations": ["json", "protobuf", "avro", "binary", "messagepack", "parquet"],
        "validation_rules": {
          "range_checks": true,
          "type_validation": true,
          "dependency_validation": true,
          "consistency_checks": true,
          "constraint_validation": true
        },
        "exchange_security": {
          "encryption": "end-to-end",
          "access_control": "role-based",
          "audit_logging": true,
          "integrity_verification": "signed-hash",
          "non_repudiation": true
        }
      },
      "calibration_parameters": {
        "format": "calibration_set",
        "schema_validation": true,
        "versioning": true,
        "calibration_types": ["model_weights", "thresholds", "feature_importance", "uncertainty_bounds", "scoring_functions", "confidence_intervals", "prior_distributions"],
        "validation_rules": {
          "consistency_check": true,
          "performance_impact_assessment": true,
          "statistical_validation": true,
          "cross-referencing": true
        }
      }
    },
    "security": {
      "authentication": {
        "mechanism": "mutual_tls",
        "token_based": true,
        "token_lifetime": "24h",
        "renewal_strategy": "sliding_window",
        "multi_factor": true,
        "certificate_pinning": true,
        "revocation_checking": "ocsp",
        "identity_verification": "strong"
      },
      "authorization": {
        "mechanism": "role_based",
        "permission_levels": ["read", "write", "execute", "admin"],
        "scope_restriction": true,
        "attribute_based_controls": true,
        "delegation_capabilities": true,
        "time_bound_access": true,
        "dynamic_permission_adjustment": true
      },
      "encryption": {
        "transport_layer": "TLS 1.3",
        "payload_encryption": "AES-256-GCM",
        "key_rotation": "automatic",
        "key_rotation_period": "30d",
        "perfect_forward_secrecy": true,
        "quantum_resistant_options": true,
        "hardware_security_module_support": true
      },
      "integrity": {
        "message_signing": true,
        "replay_protection": true,
        "tamper_detection": true,
        "non_repudiation": true,
        "data_provenance": true,
        "immutable_audit_trail": true
      }
    },
    "error_handling": {
      "error_schema": {
        "error_id": "string (UUID)",
        "timestamp": "ISO-8601 datetime with microsecond precision",
        "error_code": "string (error identifier)",
        "error_type": "enum (validation, business, system, security, communication, resource, timeout, data_quality)",
        "severity": "enum (fatal, error, warning, info)",
        "message": "string (human-readable error message)",
        "details": "object (error-specific details)",
        "source": "string (component that generated the error)",
        "context": "object (context in which error occurred)",
        "diagnostic_data": "object (data to help diagnose and fix the error)",
        "suggestion": "string (suggested action to resolve error)",
        "related_errors": "array of error_ids",
        "retry_suggestion": {
          "should_retry": "boolean",
          "retry_delay": "integer (milliseconds)",
          "max_retries": "integer"
        },
        "trace_info": {
          "trace_id": "string",
          "span_id": "string",
          "parent_span_id": "string"
        },
        "bcbs_compliance": {
          "classification": "enum (model_risk, data_quality, validation, regulatory, security)",
          "report_necessary": "boolean",
          "evidence_preservation": "boolean",
          "regulatory_impact": "enum (none, low, medium, high)"
        }
      },
      "error_response_strategy": {
        "immediate_retry": ["connection_error", "timeout", "rate_limit", "resource_contention"],
        "delayed_retry": ["service_unavailable", "dependency_failure"],
        "circuit_breaker": {
          "enabled": true,
          "threshold": 5,
          "reset_period": "1m"
        },
        "fallback_behavior": {
          "isolation": "task-level",
          "degraded_mode_capabilities": ["limited-functionality", "cached-results", "alternative-method"],
          "alert_generation": true
        },
        "recovery_procedures": {
          "checkpoint_recovery": true,
          "state_reconstruction": true,
          "compensating_actions": true,
          "warm_restart": true
        }
      },
      "validation_failures": {
        "handling_strategy": "reject_with_detailed_feedback",
        "categorization": "structured_by_source",
        "remediation_path": "documented_per_error",
        "validation_feedback_loop": true,
        "quality_threshold_adjustment": true
      }
    },
    "transport": {
      "primary": {
        "protocol": "https",
        "style": "rest",
        "format": "json",
        "compression": true,
        "batching": true,
        "max_batch_size": 100,
        "timeout": "30s",
        "retry_policy": {
          "max_attempts": 3,
          "backoff": "exponential",
          "initial_delay": "500ms",
          "max_delay": "10s",
          "jitter": true
        }
      },
      "alternatives": [
        {
          "protocol": "grpc",
          "style": "streaming",
          "format": "protobuf",
          "secure": true,
          "priority": "high",
          "use_case": "real-time_updates"
        },
        {
          "protocol": "amqp",
          "style": "messaging",
          "format": "messagepack",
          "secure": true,
          "priority": "medium",
          "use_case": "async_operations"
        }
      ],
      "file_transfer": {
        "mechanism": "chunked_https",
        "alternatives": ["sftp", "s3"],
        "chunking": {
          "enabled": true,
          "optimal_size": "5MB",
          "parallel_transfers": 3
        },
        "integrity_verification": "sha256",
        "resume_support": true
      }
    }
  },
  
  "_comment_workflow_templates": "Predefined workflow templates for common agent interactions",
  "workflow_templates": {
    "model_calibration_workflow": {
      "name": "Model Calibration Workflow",
      "description": "Coordinated process for calibrating the valuation model with validation feedback",
      "version": "2.0.0",
      "participants": [
        {"agent_type": "bootstrap", "role": "orchestrator"},
        {"agent_type": "valuation", "role": "model_provider"},
        {"agent_type": "validation", "role": "validator"}
      ],
      "phases": [
        {
          "name": "initialization",
          "description": "Set up the calibration environment",
          "steps": [
            {
              "id": "request_calibration",
              "executor": "bootstrap",
              "action": "initiate_calibration",
              "parameters": {
                "model_id": "string",
                "calibration_dataset": "reference",
                "target_metrics": ["r2", "rmse", "mae", "mape"]
              },
              "next": "prepare_model"
            },
            {
              "id": "prepare_model",
              "executor": "valuation",
              "action": "load_model",
              "parameters": {
                "model_id": "from-context",
                "include_metadata": true,
                "serialization_format": "internal"
              },
              "next": "execute_calibration"
            }
          ]
        },
        {
          "name": "execution",
          "description": "Perform the actual model calibration",
          "steps": [
            {
              "id": "execute_calibration",
              "executor": "valuation",
              "action": "calibrate_model",
              "parameters": {
                "calibration_method": "grid_search",
                "parameter_space": {
                  "learning_rate": [0.01, 0.05, 0.1],
                  "regularization_strength": [0.001, 0.01, 0.1]
                },
                "optimization_target": "rmse",
                "folds": 5
              },
              "next": "validate_calibration"
            },
            {
              "id": "validate_calibration",
              "executor": "validation",
              "action": "validate_calibration",
              "parameters": {
                "validation_method": "k_fold",
                "metrics": ["r2", "rmse", "mae", "mape"],
                "holdout_percentage": 0.2,
                "confidence_level": 0.95
              },
              "next": "apply_calibration"
            }
          ]
        },
        {
          "name": "finalization",
          "description": "Apply and finalize the calibration",
          "steps": [
            {
              "id": "apply_calibration",
              "executor": "valuation",
              "action": "apply_calibration",
              "parameters": {
                "persist": true,
                "version_tag": "auto-increment",
                "generate_report": true
              },
              "next": "complete_calibration"
            },
            {
              "id": "complete_calibration",
              "executor": "bootstrap",
              "action": "finalize_calibration",
              "parameters": {
                "notify_subscribers": true,
                "update_registry": true,
                "log_level": "info"
              },
              "next": null
            }
          ]
        }
      ],
      "error_handling": {
        "default": "retry",
        "max_retries": 3,
        "retry_delay": "exponential",
        "critical_failures": ["validation_error", "data_quality_error"],
        "actions": {
          "validation_error": {
            "action": "fallback_to_previous",
            "notify": "admin"
          },
          "resource_error": {
            "action": "reschedule",
            "parameters": {
              "backoff": "30s"
            }
          }
        }
      },
      "monitoring": {
        "progress_tracking": true,
        "metrics_collection": true,
        "log_level": "debug",
        "notification_events": [
          "phase_completion",
          "calibration_improvement",
          "validation_failure"
        ],
        "benchmarking": {
          "enabled": true,
          "baseline": "previous_version",
          "improvement_threshold": 0.05
        }
      }
    },
    "valuation_pipeline_workflow": {
      "name": "Property Valuation Pipeline",
      "description": "End-to-end workflow for property valuation including data preparation, model execution, and validation",
      "version": "2.0.0",
      "participants": [
        {"agent_type": "bootstrap", "role": "orchestrator"},
        {"agent_type": "etl", "role": "data_provider"},
        {"agent_type": "valuation", "role": "model_executor"},
        {"agent_type": "validation", "role": "validator"}
      ],
      "phases": [
        {
          "name": "data_preparation",
          "description": "Extract and prepare property data for valuation",
          "steps": [
            {
              "id": "request_property_data",
              "executor": "etl",
              "action": "extract_property_data",
              "parameters": {
                "property_id": "from-input",
                "include_gis": true,
                "include_historical": true,
                "data_quality_check": true
              },
              "next": "transform_property_data"
            },
            {
              "id": "transform_property_data",
              "executor": "etl",
              "action": "transform_property_data",
              "parameters": {
                "normalization": true,
                "feature_engineering": true,
                "missing_value_strategy": "imputation"
              },
              "next": "select_valuation_model"
            }
          ]
        },
        {
          "name": "valuation",
          "description": "Execute the valuation models and generate predictions",
          "steps": [
            {
              "id": "select_valuation_model",
              "executor": "valuation",
              "action": "select_optimal_model",
              "parameters": {
                "property_type": "from-context",
                "location": "from-context",
                "data_availability": "from-context",
                "confidence_threshold": 0.75
              },
              "next": "execute_valuation"
            },
            {
              "id": "execute_valuation",
              "executor": "valuation",
              "action": "execute_model",
              "parameters": {
                "model_id": "from-context",
                "generate_explanation": true,
                "include_confidence_interval": true,
                "interval_width": 0.90
              },
              "next": "validate_valuation"
            }
          ]
        },
        {
          "name": "validation",
          "description": "Validate the valuation results",
          "steps": [
            {
              "id": "validate_valuation",
              "executor": "validation",
              "action": "validate_valuation_result",
              "parameters": {
                "sanity_checks": true,
                "comparative_analysis": true,
                "outlier_detection": true,
                "confidence_assessment": true
              },
              "next": "finalize_valuation"
            },
            {
              "id": "finalize_valuation",
              "executor": "bootstrap",
              "action": "finalize_valuation",
              "parameters": {
                "persist_result": true,
                "generate_report": true,
                "notification_level": "standard"
              },
              "next": null
            }
          ]
        }
      ],
      "error_handling": {
        "default": "retry",
        "max_retries": 2,
        "retry_delay": "linear",
        "critical_failures": ["data_quality_error", "model_execution_error", "validation_failure"],
        "actions": {
          "data_quality_error": {
            "action": "flagged_processing",
            "parameters": {
              "quality_flag": "data_issues",
              "continue_with_warning": true
            }
          },
          "model_execution_error": {
            "action": "fallback_model",
            "parameters": {
              "model_type": "baseline_linear"
            }
          }
        }
      },
      "monitoring": {
        "progress_tracking": true,
        "metrics_collection": true,
        "log_level": "info",
        "notification_events": [
          "phase_completion",
          "valuation_completion",
          "quality_warning",
          "error_condition"
        ],
        "performance_tracking": {
          "enabled": true,
          "timing_breakdown": true,
          "resource_utilization": true,
          "bottleneck_identification": true
        }
      }
    },
    "system_startup_workflow": {
      "name": "BCBS System Startup",
      "description": "Coordinated system startup sequence for all BCBS agents",
      "version": "2.0.0",
      "participants": [
        {"agent_type": "bootstrap", "role": "orchestrator"},
        {"agent_type": "etl", "role": "data_system"},
        {"agent_type": "valuation", "role": "model_system"},
        {"agent_type": "validation", "role": "quality_system"}
      ],
      "phases": [
        {
          "name": "initialization",
          "description": "Initialize the environment and verify configuration",
          "steps": [
            {
              "id": "initialize_environment",
              "executor": "bootstrap",
              "action": "setup_environment",
              "parameters": {
                "configuration": "production",
                "strict_mode": true,
                "verify_dependencies": true
              },
              "next": "verify_system_integrity"
            },
            {
              "id": "verify_system_integrity",
              "executor": "bootstrap",
              "action": "integrity_check",
              "parameters": {
                "check_components": true,
                "verify_connectivity": true,
                "validate_configs": true
              },
              "next": "start_data_systems"
            }
          ]
        },
        {
          "name": "data_system_startup",
          "description": "Start and verify data processing systems",
          "steps": [
            {
              "id": "start_data_systems",
              "executor": "etl",
              "action": "initialize_data_services",
              "parameters": {
                "connection_pool_size": 10,
                "verify_schemas": true,
                "load_reference_data": true
              },
              "next": "validate_data_access"
            },
            {
              "id": "validate_data_access",
              "executor": "etl",
              "action": "validate_data_sources",
              "parameters": {
                "test_connectivity": true,
                "verify_credentials": true,
                "validate_permissions": true
              },
              "next": "start_model_systems"
            }
          ]
        },
        {
          "name": "model_system_startup",
          "description": "Start and initialize model execution systems",
          "steps": [
            {
              "id": "start_model_systems",
              "executor": "valuation",
              "action": "initialize_model_services",
              "parameters": {
                "load_calibrations": true,
                "verify_model_registry": true,
                "prepare_execution_environment": true
              },
              "next": "validate_model_readiness"
            },
            {
              "id": "validate_model_readiness",
              "executor": "valuation",
              "action": "validate_models",
              "parameters": {
                "smoke_test": true,
                "verify_versions": true,
                "check_performance": true
              },
              "next": "start_validation_systems"
            }
          ]
        },
        {
          "name": "validation_system_startup",
          "description": "Start and initialize validation systems",
          "steps": [
            {
              "id": "start_validation_systems",
              "executor": "validation",
              "action": "initialize_validation_services",
              "parameters": {
                "load_validation_rules": true,
                "prepare_test_suite": true,
                "configure_monitoring": true
              },
              "next": "verify_system_readiness"
            },
            {
              "id": "verify_system_readiness",
              "executor": "bootstrap",
              "action": "verify_system_readiness",
              "parameters": {
                "check_all_components": true,
                "validate_inter_agent_communication": true,
                "verify_workflow_capabilities": true
              },
              "next": "system_ready"
            },
            {
              "id": "system_ready",
              "executor": "bootstrap",
              "action": "announce_system_ready",
              "parameters": {
                "notification_level": "all",
                "publish_health_report": true,
                "activate_monitoring": true
              },
              "next": null
            }
          ]
        }
      ],
      "error_handling": {
        "default": "stop_and_report",
        "critical_failures": ["environment_error", "connectivity_error", "configuration_error", "data_access_error", "model_loading_error"],
        "actions": {
          "environment_error": {
            "action": "fix_and_retry",
            "parameters": {
              "auto_fix_attempt": true,
              "notify": "admin",
              "severity": "critical"
            }
          },
          "connectivity_error": {
            "action": "diagnose_and_report",
            "parameters": {
              "run_diagnostics": true,
              "collect_evidence": true,
              "notify": "admin"
            }
          }
        }
      },
      "monitoring": {
        "progress_tracking": true,
        "metrics_collection": true,
        "log_level": "debug",
        "notification_events": [
          "phase_completion",
          "system_ready",
          "error_condition",
          "warning_condition"
        ],
        "startup_metrics": {
          "enabled": true,
          "timing_breakdown": true,
          "component_health": true,
          "resource_utilization": true
        }
      }
    }
  },
  
  "_comment_message_examples": "Example messages for common agent interactions",
  "message_examples": {
    "bootstrap_to_valuation": {
      "request_model_training": {
        "header": {
          "message_id": "550e8400-e29b-41d4-a716-446655440000",
          "timestamp": "2025-03-31T10:24:15.324Z",
          "sender_id": "bootstrap-commander",
          "receiver_id": "god-tier-builder",
          "message_type": "command",
          "priority": "high",
          "correlation_id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "protocol_version": "6.0.0"
        },
        "body": {
          "content_type": "json",
          "content": {
            "command": "train_model",
            "model_type": "hybrid_ensemble",
            "training_parameters": {
              "dataset_id": "prop_data_2025_q1",
              "features": ["sq_ft", "bedrooms", "bathrooms", "lot_size", "year_built", "location_score", "school_rating", "crime_index"],
              "target": "sale_price",
              "validation_strategy": "cross_val",
              "cv_folds": 5,
              "hyperparameters": {
                "learning_rate": 0.05,
                "max_depth": 6,
                "min_samples_leaf": 5,
                "subsample": 0.8
              }
            },
            "output_requirements": {
              "feature_importance": true,
              "model_explanation": true,
              "save_checkpoints": true,
              "performance_metrics": ["r2", "rmse", "mae", "mape"]
            }
          },
          "schema_version": "3.1.0",
          "is_encrypted": false
        },
        "metadata": {
          "task_id": "model-training-task-2025-03-31-001",
          "workflow_id": "quarterly-model-update-q1-2025",
          "tags": ["model-training", "production", "quarterly-update"],
          "trace_id": "tracer-550e8400-e29b-41d4-a716",
          "execution_environment": "production"
        }
      },
      "status_update": {
        "header": {
          "message_id": "660f9500-f30c-52e5-b827-557766551111",
          "timestamp": "2025-03-31T10:30:45.624Z",
          "sender_id": "bootstrap-commander",
          "receiver_id": "god-tier-builder",
          "message_type": "status",
          "priority": "normal",
          "correlation_id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "protocol_version": "6.0.0"
        },
        "body": {
          "content_type": "json",
          "content": {
            "status": "running",
            "component": "valuation_pipeline",
            "health": "green",
            "uptime": 14400,
            "resource_utilization": {
              "cpu": 42.5,
              "memory": 68.3,
              "disk": 51.2
            },
            "message": "All systems operational, processing valuation requests normally",
            "metrics": {
              "requests_processed": 1245,
              "average_response_time": 780,
              "error_rate": 0.3,
              "queue_depth": 15
            },
            "active_workflows": 3,
            "maintenance_mode": false
          },
          "schema_version": "3.1.0",
          "is_encrypted": false
        },
        "metadata": {
          "task_id": "system-status-update-hourly",
          "workflow_id": "system-monitoring",
          "tags": ["status", "health", "monitoring"],
          "trace_id": "tracer-660f9500-f30c-52e5-b827",
          "execution_environment": "production"
        }
      }
    },
    "valuation_to_validation": {
      "request_model_validation": {
        "header": {
          "message_id": "770a0600-g41d-63f6-c938-668877662222",
          "timestamp": "2025-03-31T11:15:30.782Z",
          "sender_id": "god-tier-builder",
          "receiver_id": "tdd-validator",
          "message_type": "command",
          "priority": "high",
          "correlation_id": "d25be100-39ff-5678-b678-1f34b5c6d789",
          "protocol_version": "6.0.0"
        },
        "body": {
          "content_type": "json",
          "content": {
            "command": "validate_model",
            "model_id": "hybrid_ensemble_v2.3.1",
            "validation_parameters": {
              "validation_dataset_id": "holdout_data_2025_q1",
              "confidence_level": 0.95,
              "validation_metrics": ["r2", "rmse", "mae", "mape", "prediction_bias", "calibration_error"],
              "perform_stress_test": true,
              "check_feature_stability": true,
              "segment_analysis": true
            },
            "acceptance_criteria": {
              "min_r2": 0.82,
              "max_rmse_percent": 12.5,
              "max_bias": 3.0,
              "max_feature_drift": 10.0
            },
            "output_format": {
              "detailed_report": true,
              "visualizations": true,
              "comparative_analysis": true,
              "segment_breakdown": true
            }
          },
          "schema_version": "3.1.0",
          "is_encrypted": false
        },
        "metadata": {
          "task_id": "model-validation-task-2025-03-31-003",
          "workflow_id": "quarterly-model-update-q1-2025",
          "tags": ["model-validation", "production", "quarterly-update"],
          "trace_id": "tracer-770a0600-g41d-63f6-c938",
          "execution_environment": "production"
        }
      },
      "validation_result": {
        "header": {
          "message_id": "880b0700-h52e-74g7-d049-779988773333",
          "timestamp": "2025-03-31T11:45:22.145Z",
          "sender_id": "tdd-validator",
          "receiver_id": "god-tier-builder",
          "message_type": "data",
          "priority": "high",
          "correlation_id": "d25be100-39ff-5678-b678-1f34b5c6d789",
          "protocol_version": "6.0.0"
        },
        "body": {
          "content_type": "json",
          "content": {
            "validation_result": "passed_with_warnings",
            "model_id": "hybrid_ensemble_v2.3.1",
            "execution_time": 952.4,
            "metrics": {
              "r2": 0.876,
              "rmse": 24563.82,
              "rmse_percent": 7.8,
              "mae": 18750.45,
              "mape": 6.3,
              "prediction_bias": 2.1,
              "calibration_error": 3.5
            },
            "segment_performance": {
              "high_value_properties": {
                "r2": 0.834,
                "rmse_percent": 10.2,
                "sample_count": 87
              },
              "mid_value_properties": {
                "r2": 0.892,
                "rmse_percent": 6.1,
                "sample_count": 245
              },
              "low_value_properties": {
                "r2": 0.851,
                "rmse_percent": 7.4,
                "sample_count": 126
              }
            },
            "feature_stability": {
              "status": "stable",
              "max_drift": 4.2,
              "problematic_features": []
            },
            "warnings": [
              {
                "type": "high_prediction_bias",
                "affected_segment": "luxury_properties",
                "description": "Slight underprediction trend in properties above $750k",
                "recommended_action": "Consider additional features for high-end property characteristics"
              }
            ],
            "recommendation": "Approve for production with monitoring of high-value property segment"
          },
          "schema_version": "3.1.0",
          "is_encrypted": false
        },
        "metadata": {
          "task_id": "model-validation-result-2025-03-31-003",
          "workflow_id": "quarterly-model-update-q1-2025",
          "tags": ["validation-result", "production", "quarterly-update"],
          "trace_id": "tracer-880b0700-h52e-74g7-d049",
          "execution_environment": "production"
        }
      }
    },
    "etl_to_valuation": {
      "property_data_transfer": {
        "header": {
          "message_id": "990c0800-i63f-85h8-e150-88aa99884444",
          "timestamp": "2025-03-31T12:10:05.331Z",
          "sender_id": "etl-processor",
          "receiver_id": "god-tier-builder",
          "message_type": "data",
          "priority": "normal",
          "correlation_id": "e36cf200-4a00-6789-c789-2045c6d7e890",
          "protocol_version": "6.0.0"
        },
        "body": {
          "content_type": "json",
          "content": {
            "data_type": "property_batch",
            "batch_id": "property-batch-2025-03-31-morning",
            "record_count": 156,
            "property_data": {
              "format": "normalized_features",
              "schema_version": "5.3.2",
              "source_systems": ["tax_assessor", "mls", "gis_service"],
              "transfer_method": "direct_reference",
              "location": "s3://bcbs-values-data/batches/2025/03/31/morning/props.parquet",
              "data_hash": "4f98a2f5d7b936c2d9e3086de569b2d72089c6a2e38f3b7ba8a14120e6171def"
            },
            "data_quality": {
              "completeness": 0.988,
              "consistency": 0.995,
              "timeliness": 0.992,
              "geo_accuracy": 0.989
            },
            "preprocessing_applied": [
              "normalization",
              "feature_engineering",
              "outlier_detection",
              "missing_value_imputation",
              "categorical_encoding"
            ],
            "retention_policy": {
              "raw_data": "90d",
              "processed_data": "1y",
              "usage_metrics": "3y"
            }
          },
          "schema_version": "3.1.0",
          "is_encrypted": true,
          "compression": "zstd"
        },
        "metadata": {
          "task_id": "property-data-sync-morning-batch",
          "workflow_id": "daily-data-processing",
          "tags": ["property-data", "batch-transfer", "valuation-input"],
          "trace_id": "tracer-990c0800-i63f-85h8-e150",
          "execution_environment": "production",
          "security_level": "confidential"
        }
      }
    },
    "validation_to_bootstrap": {
      "validation_error_report": {
        "header": {
          "message_id": "aa0d0900-j74g-96i9-f261-99bb00995555",
          "timestamp": "2025-03-31T14:33:27.889Z",
          "sender_id": "tdd-validator",
          "receiver_id": "bootstrap-commander",
          "message_type": "error",
          "priority": "high",
          "correlation_id": "f47fe300-5b11-7890-d890-3156d7e8f901",
          "protocol_version": "6.0.0"
        },
        "body": {
          "content_type": "json",
          "content": {
            "error_id": "validation-err-20250331-004",
            "error_type": "validation",
            "severity": "error",
            "error_code": "VAL-2045",
            "message": "Validation pipeline failure: Inconsistent feature distribution detected",
            "details": {
              "pipeline_stage": "distribution_validation",
              "affected_features": ["bedroom_count", "bath_count", "lot_size"],
              "expected_distribution": "log-normal",
              "observed_distribution": "multi-modal with significant skew",
              "kl_divergence": 0.42,
              "failure_timestamp": "2025-03-31T14:32:45.124Z",
              "execution_context": {
                "validation_job_id": "val-job-20250331-185",
                "data_batch_id": "property-batch-2025-03-31-afternoon",
                "processor_node": "validation-worker-07"
              }
            },
            "diagnostic_data": {
              "histogram_data": "{base64-encoded-binary-data}",
              "logs": [
                "14:32:40.221 | INFO | Starting distribution validation for batch property-batch-2025-03-31-afternoon",
                "14:32:42.115 | INFO | Processing 204 properties for distribution analysis",
                "14:32:44.332 | WARN | Unusual distribution detected in bedroom_count, bath_count, lot_size",
                "14:32:45.001 | ERROR | Validation failed: KL divergence exceeds threshold (0.42 > 0.25)"
              ],
              "previous_occurrences": 0,
              "system_state": {
                "cpu_load": 65.3,
                "memory_utilization": 72.8,
                "active_processes": 24
              }
            },
            "suggestion": "Investigate potential data quality issues in source systems or ETL transformation errors",
            "retry_suggestion": {
              "should_retry": true,
              "retry_delay": 1800000,
              "max_retries": 2
            },
            "bcbs_compliance": {
              "classification": "data_quality",
              "report_necessary": true,
              "evidence_preservation": true,
              "regulatory_impact": "medium"
            }
          },
          "schema_version": "3.1.0",
          "is_encrypted": false
        },
        "metadata": {
          "task_id": "validation-pipeline-afternoon-batch",
          "workflow_id": "daily-data-processing",
          "tags": ["validation", "error", "distribution-check", "data-quality"],
          "trace_id": "tracer-aa0d0900-j74g-96i9-f261",
          "execution_environment": "production",
          "source_location": "src/validation/distribution_validator.py:245"
        }
      }
    }
  },
  
  "_comment_bcbs_compliance": "Compliance-specific configurations for Basel Committee on Banking Supervision",
  "bcbs_compliance": {
    "version": "2.0.0",
    "last_updated": "2025-03-31",
    "regulatory_frameworks": [
      {
        "name": "BCBS 239",
        "description": "Principles for effective risk data aggregation and risk reporting",
        "compliance_features": [
          "data_lineage_tracking",
          "data_quality_monitoring",
          "comprehensive_validation",
          "audit_trail_maintenance",
          "reproducibility_guarantees"
        ]
      },
      {
        "name": "SR 11-7",
        "description": "Guidance on Model Risk Management",
        "compliance_features": [
          "model_development_documentation",
          "rigorous_model_validation",
          "ongoing_monitoring",
          "governance_controls",
          "independent_review"
        ]
      }
    ],
    "reporting_requirements": {
      "valuation_accuracy": {
        "frequency": "quarterly",
        "format": "standardized_report",
        "required_metrics": [
          "model_performance_metrics",
          "backtesting_results",
          "uncertainty_quantification",
          "data_quality_metrics"
        ],
        "retention_period": "7y"
      },
      "model_risk": {
        "frequency": "monthly",
        "format": "risk_assessment_matrix",
        "required_sections": [
          "model_limitations",
          "sensitivity_analysis",
          "scenario_testing",
          "override_analytics"
        ],
        "review_process": "dual_control"
      },
      "incident_reporting": {
        "triggers": [
          "significant_model_failure",
          "data_quality_breach",
          "unexpected_valuation_pattern",
          "security_incident"
        ],
        "escalation_path": "model_risk_committee",
        "time_sensitivity": "24h",
        "documentation_requirements": "comprehensive_with_remediation"
      }
    },
    "validation_standards": {
      "independence_requirements": {
        "organizational_separation": true,
        "reviewer_qualification": "certified_validator",
        "conflict_of_interest_prevention": true
      },
      "documentation_standards": {
        "component_level": [
          "theory_and_logic",
          "limitations_and_assumptions",
          "input_requirements",
          "implementation_details",
          "testing_evidence"
        ],
        "system_level": [
          "data_flow_diagrams",
          "component_interactions",
          "error_handling_procedures",
          "calibration_methodology",
          "approval_history"
        ]
      },
      "testing_requirements": {
        "coverage_minimum": 0.95,
        "boundary_testing": true,
        "stress_testing": true,
        "benchmark_comparison": true,
        "adversarial_testing": true
      }
    },
    "audit_traceability": {
      "logged_actions": [
        "model_approval",
        "parameter_changes",
        "validation_decisions",
        "error_handling",
        "override_decisions",
        "access_control_changes"
      ],
      "log_retention": "10y",
      "immutability": "cryptographic_verification",
      "retrieval_capabilities": "point_in_time_reconstruction"
    }
  }
}